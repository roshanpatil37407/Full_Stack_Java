package jdbc;

import java.sql.*;
import java.util.Scanner;

public class CRUP_Operations {
	  public static void main(String[] args) {
	        Scanner sc = new Scanner(System.in);

	        try {
	           
	            Class.forName("com.mysql.cj.jdbc.Driver");

	            
	            Connection con = DriverManager.getConnection(
	                    "jdbc:mysql://localhost:3306/Roshu", "root", "root");
	            
	            
	            int choise;
	            do {
	            	System.out.println("INSERT");
	            	System.out.println("UPDATE");
	            	System.out.println("DELET");
	            	System.out.println("FETCH");
	            	System.out.println("CALL");
	            	System.out.println("EXIT");
	            	System.out.print("Enter choice: ");
	            	choise=sc.nextInt();	
	            	
	            	switch(choise) {
	            	case 1:
	            		 System.out.print("Enter Name: ");
	                        String name = sc.next();
	                        System.out.print("Enter Salary: ");
	                        double salary = sc.nextDouble();

	                        String insertQuery = "INSERT INTO employee_new (name, salary) VALUES (?, ?)";
	                        PreparedStatement psInsert = con.prepareStatement(insertQuery);
	                        psInsert.setString(1, name);
	                        psInsert.setDouble(2, salary);
	                        psInsert.executeUpdate();
	                        System.out.println(" Employee Inserted Successfully!");
	                        break;
	            	case 2:
	            		   System.out.print("Enter Employee ID to Update: ");
	                        int u = sc.nextInt();
	                        System.out.print("Enter New Salary: ");
	                        double ns = sc.nextDouble();
	                        String uq="update emp set salary = ? where =?";
	                        PreparedStatement  psu=con.prepareStatement(uq);
	                        psu.setDouble(1, ns);
	                        psu.setInt(2, u);
	                        int updated = psu.executeUpdate();
	                        if (updated > 0)
	                            System.out.println("Salary Updated Successfully!");
	                        else
	                            System.out.println(" Employee Not Found!");
	                        break;
	                        
	            	case 3:
	            		 System.out.print("Enter Employee ID to Delete: ");
	                        int de = sc.nextInt();

	                        String dl = "DELETE FROM employee_new WHERE id = ?";
	                        PreparedStatement dls = con.prepareStatement(dl);
	                        int deleted = dls.executeUpdate();
	                        if (deleted > 0)
	                            System.out.println("Employee Deleted Successfully!");
	                        else
	                            System.out.println("Employee Not Found!");
	                        break;
	                        
	            	case 4:
	            		String s = "SELECT * FROM employee_new";
                        Statement stmt = con.createStatement();
                        ResultSet rs = stmt.executeQuery(s);

                        System.out.println("\nID | Name | Salary");
                        System.out.println("--------------------");
                        while (rs.next()) {
                            System.out.println(
                                    rs.getInt("id") + " | " +
                                    rs.getString("name") + " | " +
                                    rs.getDouble("salary"));
                        }
                        break;
	                        
                        
	            	case 5:
	            		String sqls="call salary()";
	            		 CallableStatement cs=con.prepareCall(sqls);
	            		 
	            		 ResultSet rs2=cs.executeQuery();
	            		 System.out.println("ID | Name | Salary");
	                        System.out.println("--------------------");
	                        while (rs2.next()) {
	                            System.out.println(
	                                    rs2.getInt("id") + " | " +
	                                    rs2.getString("name") + " | " +
	                                    rs2.getDouble("salary"));
	                        }
	                        break;
	                        
	            	case 6:
	            		 System.out.println(" Exiting Program...");
	                        break;

	                    default:
	                        System.out.println(" Invalid Choice! Try Again.");
	            		
	                        
                        
	            	}
	            	
	            
	            }while(choise !=6);
	            
	            
	            
	            
	            
	            
	        }catch(Exception e) {
	        	
	        }
	  }
	  
}
